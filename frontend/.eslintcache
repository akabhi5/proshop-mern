[{"E:\\proshop\\frontend\\src\\reportWebVitals.js":"1","E:\\proshop\\frontend\\src\\App.js":"2","E:\\proshop\\frontend\\src\\components\\Footer.js":"3","E:\\proshop\\frontend\\src\\index.js":"4","E:\\proshop\\frontend\\src\\components\\Header.js":"5","E:\\proshop\\frontend\\src\\screens\\HomeScreen.js":"6","E:\\proshop\\frontend\\src\\components\\Rating.js":"7","E:\\proshop\\frontend\\src\\screens\\ProductScreen.js":"8","E:\\proshop\\frontend\\src\\components\\Product.js":"9","E:\\proshop\\frontend\\src\\store.js":"10","E:\\proshop\\frontend\\src\\reducers\\productReducers.js":"11","E:\\proshop\\frontend\\src\\components\\Message.js":"12","E:\\proshop\\frontend\\src\\constants\\productConstants.js":"13","E:\\proshop\\frontend\\src\\actions\\productActions.js":"14","E:\\proshop\\frontend\\src\\screens\\CartScreen.js":"15","E:\\proshop\\frontend\\src\\reducers\\cartReducers.js":"16","E:\\proshop\\frontend\\src\\actions\\cartActions.js":"17","E:\\proshop\\frontend\\src\\components\\Loader.js":"18","E:\\proshop\\frontend\\src\\constants\\cartConstants.js":"19","E:\\proshop\\frontend\\src\\reducers\\userReducers.js":"20","E:\\proshop\\frontend\\src\\components\\FormContainer.js":"21","E:\\proshop\\frontend\\src\\screens\\LoginScreen.js":"22","E:\\proshop\\frontend\\src\\actions\\userActions.js":"23","E:\\proshop\\frontend\\src\\constants\\userConstants.js":"24","E:\\proshop\\frontend\\src\\screens\\RegisterScreen.js":"25","E:\\proshop\\frontend\\src\\screens\\ProfileScreens.js":"26","E:\\proshop\\frontend\\src\\screens\\ShippingScreen.js":"27","E:\\proshop\\frontend\\src\\components\\CheckoutSteps.js":"28","E:\\proshop\\frontend\\src\\screens\\PaymentScreen.js":"29","E:\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","E:\\proshop\\frontend\\src\\reducers\\orderReducers.js":"31","E:\\proshop\\frontend\\src\\actions\\orderActions.js":"32","E:\\proshop\\frontend\\src\\constants\\orderConstants.js":"33","E:\\proshop\\frontend\\src\\screens\\OrderScreen.js":"34"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"36"},{"size":1576,"mtime":1606675355821,"results":"37","hashOfConfig":"36"},{"size":331,"mtime":1606149648539,"results":"38","hashOfConfig":"36"},{"size":597,"mtime":1606321528940,"results":"39","hashOfConfig":"36"},{"size":1866,"mtime":1606560859466,"results":"40","hashOfConfig":"36"},{"size":1056,"mtime":1606323493196,"results":"41","hashOfConfig":"36"},{"size":1819,"mtime":1606152856123,"results":"42","hashOfConfig":"36"},{"size":3754,"mtime":1606331802477,"results":"43","hashOfConfig":"36"},{"size":836,"mtime":1606156954076,"results":"44","hashOfConfig":"36"},{"size":1955,"mtime":1606737165238,"results":"45","hashOfConfig":"36"},{"size":1040,"mtime":1606325246383,"results":"46","hashOfConfig":"36"},{"size":256,"mtime":1606323438554,"results":"47","hashOfConfig":"36"},{"size":374,"mtime":1606323654861,"results":"48","hashOfConfig":"36"},{"size":1215,"mtime":1606324789823,"results":"49","hashOfConfig":"36"},{"size":3746,"mtime":1606646013496,"results":"50","hashOfConfig":"36"},{"size":1290,"mtime":1606664432455,"results":"51","hashOfConfig":"36"},{"size":1432,"mtime":1606664404339,"results":"52","hashOfConfig":"36"},{"size":410,"mtime":1606323344767,"results":"53","hashOfConfig":"36"},{"size":242,"mtime":1606664261060,"results":"54","hashOfConfig":"36"},{"size":2502,"mtime":1606737170604,"results":"55","hashOfConfig":"36"},{"size":366,"mtime":1606502977828,"results":"56","hashOfConfig":"36"},{"size":2156,"mtime":1606504062113,"results":"57","hashOfConfig":"36"},{"size":4526,"mtime":1606736667926,"results":"58","hashOfConfig":"36"},{"size":1082,"mtime":1606735148104,"results":"59","hashOfConfig":"36"},{"size":3231,"mtime":1606640890072,"results":"60","hashOfConfig":"36"},{"size":5517,"mtime":1606733126297,"results":"61","hashOfConfig":"36"},{"size":2607,"mtime":1606647635147,"results":"62","hashOfConfig":"36"},{"size":1294,"mtime":1606663016527,"results":"63","hashOfConfig":"36"},{"size":2030,"mtime":1606664692685,"results":"64","hashOfConfig":"36"},{"size":5190,"mtime":1606675271660,"results":"65","hashOfConfig":"36"},{"size":2373,"mtime":1606733230457,"results":"66","hashOfConfig":"36"},{"size":3338,"mtime":1606730419219,"results":"67","hashOfConfig":"36"},{"size":818,"mtime":1606733178037,"results":"68","hashOfConfig":"36"},{"size":6480,"mtime":1606716482478,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1295lh5",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"89"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"89"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},"E:\\proshop\\frontend\\src\\reportWebVitals.js",[],["147","148"],"E:\\proshop\\frontend\\src\\App.js",[],"E:\\proshop\\frontend\\src\\components\\Footer.js",[],["149","150"],"E:\\proshop\\frontend\\src\\index.js",[],"E:\\proshop\\frontend\\src\\components\\Header.js",[],"E:\\proshop\\frontend\\src\\screens\\HomeScreen.js",[],"E:\\proshop\\frontend\\src\\components\\Rating.js",[],"E:\\proshop\\frontend\\src\\screens\\ProductScreen.js",["151"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProductDetails } from \"../actions/productActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={`${product.numReviews} reviews`}\r\n                />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n              <ListGroup.Item>Price: ${product.description}</ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>${product.price}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>\r\n                      {product.countInStock > 0 ? \"In Stock\" : \"Out of stock\"}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    onClick={addToCartHandler}\r\n                    className=\"bnt btn-block\"\r\n                    type=\"button\"\r\n                    disabled={product.countInStock === 0}\r\n                  >\r\n                    Add To Cart\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n",["152","153"],"E:\\proshop\\frontend\\src\\components\\Product.js",[],["154","155"],"E:\\proshop\\frontend\\src\\store.js",[],"E:\\proshop\\frontend\\src\\reducers\\productReducers.js",[],"E:\\proshop\\frontend\\src\\components\\Message.js",[],["156","157"],"E:\\proshop\\frontend\\src\\constants\\productConstants.js",[],"E:\\proshop\\frontend\\src\\actions\\productActions.js",[],"E:\\proshop\\frontend\\src\\screens\\CartScreen.js",[],"E:\\proshop\\frontend\\src\\reducers\\cartReducers.js",[],"E:\\proshop\\frontend\\src\\actions\\cartActions.js",[],"E:\\proshop\\frontend\\src\\components\\Loader.js",[],"E:\\proshop\\frontend\\src\\constants\\cartConstants.js",[],"E:\\proshop\\frontend\\src\\reducers\\userReducers.js",[],"E:\\proshop\\frontend\\src\\components\\FormContainer.js",["158"],"E:\\proshop\\frontend\\src\\screens\\LoginScreen.js",["159"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { login } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Customer?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","E:\\proshop\\frontend\\src\\actions\\userActions.js",[],"E:\\proshop\\frontend\\src\\constants\\userConstants.js",[],"E:\\proshop\\frontend\\src\\screens\\RegisterScreen.js",[],"E:\\proshop\\frontend\\src\\screens\\ProfileScreens.js",[],"E:\\proshop\\frontend\\src\\screens\\ShippingScreen.js",[],"E:\\proshop\\frontend\\src\\components\\CheckoutSteps.js",[],"E:\\proshop\\frontend\\src\\screens\\PaymentScreen.js",["160","161","162","163","164","165"],"import React, { useState } from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"Paypal or Credit Card\"\r\n              id=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              value=\"PayPal\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type=\"radio\"\r\n              label=\"Stripe\"\r\n              id=\"Stripe\"\r\n              name=\"paymentMethod\"\r\n              value=\"Stripe\"\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","E:\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"E:\\proshop\\frontend\\src\\reducers\\orderReducers.js",[],"E:\\proshop\\frontend\\src\\actions\\orderActions.js",[],"E:\\proshop\\frontend\\src\\constants\\orderConstants.js",[],"E:\\proshop\\frontend\\src\\screens\\OrderScreen.js",["166"],"import Axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Col, ListGroup, Row, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { ORDER_PAY_RESET } from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  if (!loading) {\r\n    // calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await Axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}\"`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, successPay]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    //\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city},{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <p>\r\n                <h2>Payment Method</h2>\r\n                <strong>Method:</strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n",{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"167","replacedBy":"171"},{"ruleId":"169","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":28,"column":6,"nodeType":"175","endLine":28,"endColumn":16,"suggestions":"176"},{"ruleId":"167","replacedBy":"177"},{"ruleId":"169","replacedBy":"178"},{"ruleId":"167","replacedBy":"179"},{"ruleId":"169","replacedBy":"180"},{"ruleId":"167","replacedBy":"181"},{"ruleId":"169","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"187","line":16,"column":11,"nodeType":"185","messageId":"186","endLine":16,"endColumn":18},{"ruleId":"183","severity":1,"message":"188","line":17,"column":10,"nodeType":"185","messageId":"186","endLine":17,"endColumn":14},{"ruleId":"183","severity":1,"message":"189","line":17,"column":16,"nodeType":"185","messageId":"186","endLine":17,"endColumn":23},{"ruleId":"183","severity":1,"message":"190","line":18,"column":10,"nodeType":"185","messageId":"186","endLine":18,"endColumn":20},{"ruleId":"183","severity":1,"message":"191","line":18,"column":22,"nodeType":"185","messageId":"186","endLine":18,"endColumn":35},{"ruleId":"183","severity":1,"message":"192","line":19,"column":10,"nodeType":"185","messageId":"186","endLine":19,"endColumn":17},{"ruleId":"183","severity":1,"message":"193","line":19,"column":19,"nodeType":"185","messageId":"186","endLine":19,"endColumn":29},{"ruleId":"183","severity":1,"message":"194","line":4,"column":44,"nodeType":"185","messageId":"186","endLine":4,"endColumn":50},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],["195"],["196"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["197"],["195"],["196"],["195"],["196"],["195"],["196"],"no-unused-vars","'Children' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'postalCode' is assigned a value but never used.","'setPostalCode' is assigned a value but never used.","'country' is assigned a value but never used.","'setCountry' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"200","text":"201"},[792,802],"[dispatch, match.params.id]"]